{"version":3,"sources":["components/Person.js","components/Form.js","components/Filter.js","services/people.js","components/Notification.js","components/Error.js","App.js","index.js"],"names":["Person","person","deletePerson","name","number","className","onClick","Form","onSubmit","nameChange","numberChange","onChange","value","type","Filter","filterNames","baseurl","axios","get","then","res","data","newObject","post","id","put","delete","Notification","message","Error","errorMessage","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","newFilter","setNewFilter","setMessage","setErrorMessage","useEffect","peopleService","initialPeople","filteredPersons","filter","toLowerCase","includes","e","target","preventDefault","personObject","some","p","window","confirm","oldPerson","find","returnedPerson","map","catch","concat","setTimeout","i","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eca5dbec.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Person =({person, deletePerson}) => {\r\n        return (\r\n            <p>\r\n             {person.name}: {person.number}  \r\n             <button \r\n             className=\"delete\"\r\n             onClick={deletePerson}>Delete</button>\r\n            </p>\r\n        );\r\n    }\r\n\r\nexport default Person;","import React from 'react';\r\n\r\nconst Form = ({ onSubmit, nameChange, name, numberChange, number }) => {\r\n\r\n  return (\r\n    <form \r\n    className=\"form\"\r\n    onSubmit={onSubmit}>\r\n      <div>\r\n        Name:\r\n        <br />\r\n          <input\r\n          onChange={nameChange}\r\n          value={name}\r\n        />\r\n      </div>\r\n      <br />\r\n      <div>\r\n        Number:\r\n        <br />\r\n          <input\r\n          onChange={numberChange}\r\n          value={number}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button className=\"add\" type=\"submit\">Add</button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Form;","import React from 'react';\r\n\r\nconst Filter = ({filterNames}) => {\r\n    return (\r\n<form>\r\n    Filter names\r\n    <br />\r\n    <input onChange={filterNames}  />\r\n</form>\r\n    )\r\n}\r\n\r\nexport default Filter;","import axios from 'axios'\r\nconst baseurl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const req = axios.get(baseurl)\r\n    return req.then(res => res.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseurl, newObject)\r\n    return request.then(res => res.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseurl}/${id}`, newObject)\r\n    return request.then(res => res.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n    const req = axios.delete(`${baseurl}/${id}`)\r\n    return req.then(res => res.data)\r\n}\r\n\r\nexport default { getAll, create, update, remove }\r\n","import React from 'react';\r\n\r\nconst Notification = ({ message }) => {\r\n    if (message === null) {\r\n        return null\r\n    }\r\n    return (\r\n        <div className=\"message\">\r\n            {message}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Notification;","import React from 'react';\r\n\r\nconst Error = ({ errorMessage }) => {\r\n    if (errorMessage === null) {\r\n        return null\r\n    }\r\n    return (\r\n        <div className=\"error\">\r\n            {errorMessage}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Error;","import React, { useState, useEffect } from 'react'\nimport Person from './components/Person'\nimport Form from './components/Form'\nimport Filter from './components/Filter'\nimport peopleService from './services/people'\nimport Notification from './components/Notification'\nimport Error from './components/Error'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('add new person')\n  const [newNumber, setNewNumber] = useState('add new number')\n  const [newFilter, setNewFilter] = useState('')\n  const [message, setMessage] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    peopleService\n      .getAll()\n      .then(initialPeople => {\n        setPersons(initialPeople)\n      })\n  }, [])\n\n  const addPerson = (e) => {\n    e.preventDefault()\n    const personObject = {\n      name: newName,\n      number: newNumber\n    }\n\n    if (persons.some(p => p.name === newName &&\n      window.confirm(`${newName} is already in the phonebook. Replace the old number with the new one?`))) {\n      const oldPerson = persons.find(p => p.name === newName)\n      peopleService\n        .update(oldPerson.id, personObject)\n        .then(returnedPerson => {\n          setPersons(persons.map(person => (person.id === oldPerson.id) ? returnedPerson : person))\n          setMessage(`${personObject.name} updated succesfully!`)\n        })\n        .catch(e => {\n          setErrorMessage('Something went wrong while trying to update details. Hit refresh')\n        })\n    } else {\n      peopleService\n        .create(personObject)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          setNewName('')\n          setNewNumber('')\n          setMessage(`${personObject.name} added succesfully!`)\n        })\n      setTimeout(() => {\n        setMessage(null)\n      }, 10000)\n    }\n  }\n\n  const removePerson = (id, name) => {\n    if (window.confirm(`Are you sure you want to delete ${name}?`)) {\n      peopleService\n        .remove(id)\n        .then(() => {\n          setMessage(`${name} deleted succesfully!`)\n          setPersons(persons.filter(p => p.id !== id))\n        })\n        .catch(e => {\n          setErrorMessage(`${name} has already been deleted! Hit refresh`)\n          setPersons(persons.filter(p => p.id !== id))\n        })\n      setTimeout(() => {\n        setMessage(null)\n        setErrorMessage(null)\n      }, 10000)\n    }\n  }\n\n  const handleNameChange = e => { setNewName(e.target.value) }\n\n  const handleNumberChange = e => { setNewNumber(e.target.value) }\n\n  const handleFilter = e => { setNewFilter(e.target.value) }\n\n  const filteredPersons = persons.filter(person => {\n    return person.name.toLowerCase().includes(newFilter.toLowerCase())\n  })\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} />\n      <Error errorMessage={errorMessage} />\n      <Filter\n        filterNames={handleFilter}\n      />\n      <h2>Add New Person</h2>\n      <Form\n        onSubmit={addPerson}\n        name={newName}\n        nameChange={handleNameChange}\n        number={newNumber}\n        numberChange={handleNumberChange}\n      />\n      <h2>Numbers</h2>\n      <div>\n        {filteredPersons.map((person, i) =>\n          <Person key={i} person={person} deletePerson={() => removePerson(person.id, person.name)} />\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}